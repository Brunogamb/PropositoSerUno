---
---
<section class="login-section">
    <div id="login-form">
        <h1>Iniciar sesión</h1>
        <h2>Accede a tu cuenta ingresando tu dirección de correo electrónico y tu código de acceso.</h2>
        <form novalidate>
            <input type="email" id="email" placeholder="Correo electrónico" />
            <span class="field-error" id="email-error"></span>

            <div class="password-wrapper">
                <input type="password" id="code" placeholder="Código" minlength="4" />
                <span class="field-error" id="code-error"></span>
                <p id="login-error">Código o email incorrecto</p>
                <label class="show-code">
                    <input type="checkbox" id="show-code-checkbox" />
                    <span>Mostrar código</span>
                </label>
            </div>

            <button id="login-btn" type="button">Iniciar sesión</button>
        </form>
    </div>
</section>

<style>
.login-section {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0 20px;
    margin-top: 60px;
}

h1 {
    font-family: 'Goudy Old Style', serif;
    font-weight: 700;
    text-align: center;
    margin-bottom: 16px;
    color: #591583;
    font-size: clamp(32px, 5vw, 48px);
    line-height: 1.2;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

h2 {
    max-width: 480px;
    text-align: center;
    margin-bottom: 30px;
    color: #64748b;
    font-weight: 400;
    font-size: clamp(16px, 3vw, 20px);
    text-wrap: balance;
    line-height: 1.5;
}

form {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#login-form {
    margin: auto;
    background: #fff;
    padding: clamp(32px, 6vw, 56px);
    border-radius: 24px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
    border: 1px solid rgba(255, 255, 255, 0.2);
    width: 100%;
    max-width: 480px;
}

#login-form input:not([type="checkbox"]) {
    display: block;
    margin-bottom: 8px;
    padding: 16px 20px;
    width: 100%;
    max-width: 360px;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    font-size: 16px;
    font-family: inherit;
    background: rgba(255, 255, 255, 0.9);
    transition: all 0.3s ease;
    color: #1e293b;
}

#login-form input:not([type="checkbox"]):focus {
    outline: none;
    border-color: #591583;
    box-shadow: 0 0 0 3px rgba(89, 21, 131, 0.1);
    background: #fff;
}

#login-form input:not([type="checkbox"])::placeholder {
    color: #94a3b8;
    font-weight: 400;
}

.password-wrapper {
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 12px;
    width: 100%;
}

.show-code {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    font-size: 15px;
    color: #64748b;
    margin-bottom: 8px;
    cursor: pointer;
    transition: color 0.3s ease;
}

.show-code:hover {
    color: #591583;
}

.show-code input[type="checkbox"] {
    width: 18px;
    height: 18px;
    cursor: pointer;
    accent-color: #591583;
}

.field-error {
    display: none;
    color: #dc2626;
    font-size: 14px;
    margin-top: -4px;
    margin-bottom: 12px;
    font-weight: 500;
    text-align: center;
}

#login-form button {
    display: block;
    margin: 16px auto 0;
    padding: 16px 32px;
    background: linear-gradient(135deg, #591583 0%, #7b1fa2 100%);
    color: #f8fafc;
    border: none;
    border-radius: 50px;
    cursor: pointer;
    font-size: 18px;
    font-weight: 600;
    font-family: inherit;
    min-width: 200px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(89, 21, 131, 0.3);
}

#login-form button:hover {
    background: linear-gradient(135deg, #7b1fa2 0%, #9c27b0 100%);
    box-shadow: 0 8px 32px rgba(89, 21, 131, 0.4);
    transform: translateY(-1px);
}

#login-form button:active {
    transform: translateY(0);
    box-shadow: 0 4px 20px rgba(89, 21, 131, 0.3);
}

#login-form button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
}

#login-error {
    display: none;
    color: #dc2626;
    background: rgba(220, 38, 38, 0.1);
    padding: 12px 16px;
    border-radius: 8px;
    border: 1px solid rgba(220, 38, 38, 0.2);
    font-size: 14px;
    font-weight: 500;
    text-align: center;
    margin-top: 8px;
    max-width: 360px;
}

@media (max-width: 640px) {
    main {
        padding: 20px 16px;
    }
    
    #login-form {
        padding: 32px 24px;
    }
    
    h1 {
        margin-bottom: 12px;
    }
    
    h2 {
        margin-bottom: 32px;
        font-size: 18px;
    }
    
    #login-form input:not([type="checkbox"]) {
        padding: 14px 16px;
        font-size: 16px;
    }
    
    #login-form button {
        padding: 14px 28px;
        font-size: 16px;
        min-width: 180px;
    }
}

@media (max-width: 360px) {
    #login-form {
        margin: 0 8px;
        padding: 28px 20px;
    }
    
    #login-form input:not([type="checkbox"]),
    #login-error {
        max-width: 100%;
    }
}
</style>

<script type="module">
import { createClient } from 'https://cdn.skypack.dev/@supabase/supabase-js';

const SUPABASE_URL = 'https://jfejymhssyiypzlbogcq.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmZWp5bWhzc3lpeXB6bGJvZ2NxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcxOTkzMTUsImV4cCI6MjA3Mjc3NTMxNX0.mOR_IEKzwJ-KrnEGG0bMgxNwF2QDgq5c1jas-LcHkfQ';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {
    auth: {
        persistSession: false
    }
});

const loginBtn = document.getElementById("login-btn");
const errorMsg = document.getElementById("login-error");
const emailInput = document.getElementById("email");
const codeInput = document.getElementById("code");
const showCodeCheckbox = document.getElementById("show-code-checkbox");
const emailError = document.getElementById("email-error");
const codeError = document.getElementById("code-error");

function clearFieldErrors() {
    emailError.style.display = "none";
    emailError.textContent = "";
    codeError.style.display = "none";
    codeError.textContent = "";
    errorMsg.style.display = "none";
}

function showFieldError(el, msg) {
    el.textContent = msg;
    el.style.display = "block";
}

if (showCodeCheckbox) {
    showCodeCheckbox.addEventListener('change', () => {
        codeInput.type = showCodeCheckbox.checked ? 'text' : 'password';
    });
}

loginBtn.addEventListener("click", async () => {
    clearFieldErrors();

    const email = emailInput.value.trim();
    const code = codeInput.value.trim();

    let hasError = false;

    if (!email) {
        showFieldError(emailError, "El correo electrónico es obligatorio");
        hasError = true;
    } else if (!email.includes('@') || !/\S+@\S+\.\S+/.test(email)) {
        if (!email.includes('@')) {
            showFieldError(emailError, "El correo debe contener '@'");
        } else {
            showFieldError(emailError, "Ingresa un correo electrónico válido");
        }
        hasError = true;
    }

    if (!code) {
        showFieldError(codeError, "El código es obligatorio");
        hasError = true;
    }

    const minLen = 4;
    if (code && code.length < minLen) {
        showFieldError(codeError, `El código debe tener al menos ${minLen} caracteres`);
        hasError = true;
    }

    if (hasError) return;

    try {
        loginBtn.textContent = "Iniciando sesión...";
        loginBtn.disabled = true;

        if (!supabase) {
            errorMsg.textContent = "Error de inicialización. Recarga la página";
            errorMsg.style.display = "block";
            return;
        }

        console.log('Buscando código:', code);
        const { data: existingCode, error: searchError } = await supabase
            .from('users')
            .select('id, email, code')
            .eq('code', code);

        console.log('Resultado búsqueda:', { data: existingCode, error: searchError });

        if (searchError) {
            console.error('Error en búsqueda:', searchError);
            if (searchError.code === '42501') {
                errorMsg.textContent = "Error de permisos. La tabla no es accesible";
                errorMsg.style.display = "block";
            } else if (searchError.message && searchError.message.toLowerCase().includes('permission')) {
                errorMsg.textContent = "Error de permisos en la base de datos";
                errorMsg.style.display = "block";
            } else {
                errorMsg.textContent = `Error: ${searchError.message || 'Error de conexión'}`;
                errorMsg.style.display = "block";
            }
            return;
        }

        if (!existingCode || existingCode.length === 0) {
            console.log('No se encontró el código o está vacío');
            errorMsg.textContent = "Código inválido";
            errorMsg.style.display = "block";
            return;
        }

        const codeRecord = existingCode[0];
        console.log('Registro encontrado:', codeRecord);

        if (codeRecord.email) {
            console.log('El código ya tiene email asociado:', codeRecord.email);
            if (codeRecord.email === email) {
                document.cookie = "loggedIn=true; path=/; max-age=86400";
                document.cookie = `userId=${codeRecord.id}; path=/; max-age=86400`;
                
                localStorage.setItem("loggedIn", "true");
                localStorage.setItem("userId", codeRecord.id);
                
                window.location.href = "/PropositoSerUno/";
            } else {
                errorMsg.textContent = "Código o email incorrecto";
                errorMsg.style.display = "block";
            }
        } else {
            console.log('El código no tiene email, asociando:', email);
            const { data: updateResult, error: updateError } = await supabase
                .from('users')
                .update({ email: email })
                .eq('id', codeRecord.id)
                .select();
                
            console.log('Resultado actualización:', { data: updateResult, error: updateError });

            if (updateError) {
                console.error('Error en actualización:', updateError);
                errorMsg.textContent = `Error al asociar email: ${updateError.message || 'Error de conexión'}`;
                errorMsg.style.display = "block";
                return;
            }

            if (updateResult && updateResult.length > 0) {
                document.cookie = "loggedIn=true; path=/; max-age=86400";
                document.cookie = `userId=${codeRecord.id}; path=/; max-age=86400`;
                
                localStorage.setItem("loggedIn", "true");
                localStorage.setItem("userId", codeRecord.id);
                
                window.location.href = "/PropositoSerUno/";
            } else {
                errorMsg.textContent = "Error de conexión. Inténtalo de nuevo";
                errorMsg.style.display = "block";
            }
        }
    } catch (err) {
        errorMsg.textContent = "Error inesperado. Verifica tu conexión a internet";
        errorMsg.style.display = "block";
    } finally {
        loginBtn.textContent = "Iniciar sesión";
        loginBtn.disabled = false;
    }
});
</script>